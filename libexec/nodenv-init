#!/usr/bin/env bash
# Summary: Configure the shell environment for nodenv
# Usage: eval "$(nodenv init - [<shell>])"

# Bomb out if we hit an error, ever
set -e

# Verbose output in debug mode
[ -n "$NODENV_DEBUG" ] && {
  set -x
}

# Figure out what we're gonna print
print=""
for args in "$@"; do
  if [ "$args" = "-" ]; then
    print=1
    shift
  fi
done

# Check for a shell
shell="$1"
if [ -z "$shell" ]; then
  shell="$(basename "$SHELL")"
fi

# Helpers to get full path
resolve_link() {
  $(type -p greadlink readlink | head -1) $1
}

abs_dirname() {
  local cwd="$(pwd)"
  local path="$1"

  while [ -n "$path" ]; do
    cd "${path%/*}"
    local name="${path##*/}"
    path="$(resolve_link "$name" || true)"
  done

  pwd
  cd "$cwd"
}

is_fish() {
  [ "$shell" = "fish" ]
}

# Set the root of our nodenv install
root="$(abs_dirname "$0")/.."

if [ -z "$print" ]; then
  case "$shell" in
  bash )
    profile='~/.bash_profile'
    ;;
  zsh )
    profile='~/.zshrc'
    ;;
  ksh )
    profile='~/.profile'
    ;;
  fish )
    profile='~/.config/fish/config.fish'
    ;;
  * )
    profile='your profile'
    ;;
  esac

  { echo "# Load nodenv automatically by adding"
    echo "# the following to ${profile}:"
    echo
    echo 'export PATH="'${NODENV_ROOT}'/bin:$PATH"'
    is_fish && echo '. (nodenv init - | psub)' || \
      echo 'eval "$(nodenv init -)"'
    echo
  } >&2

  exit 1
fi

mkdir -p "${NODENV_ROOT}/"{shims,versions}

completion="${root}/completions/nodenv.${shell}"
if [ -r "$completion" ]; then
  case "$shell" in
  fish ) echo ". '$completion'" ;;
  *    ) echo "source '$completion'" ;;
  esac
fi

is_fish && {
  echo 'set -x PATH "'${NODENV_ROOT}'/shims" $PATH'
  echo 'nodenv rehash ^/dev/null'
} || {
  echo 'export PATH="'${NODENV_ROOT}'/shims:${PATH}"'
  echo 'nodenv rehash 2>/dev/null'
}

commands=(`nodenv-commands --sh`)
case "$shell" in
fish )
  cat <<EOS
function nodenv
  set command \$argv[1]
  set -e argv[1]

  switch "\$command"
  case ${commands[*]}
    eval (nodenv "sh-\$command" \$argv)
  case '*'
    command nodenv "\$command" \$argv
  end
end
EOS
  ;;
ksh )
  cat <<EOS
function nodenv {
  typeset command
EOS
  ;;
* )
  cat <<EOS
nodenv() {
  local command
EOS
  ;;
esac

if [ "$shell" != "fish" ]; then
IFS="|"
cat <<EOS
  command="\$1"
  if [ "\$#" -gt 0 ]; then
    shift
  fi

  case "\$command" in
  ${commands[*]})
    eval "\`nodenv "sh-\$command" "\$@"\`";;
  *)
    command nodenv "\$command" "\$@";;
  esac
}
EOS
fi
